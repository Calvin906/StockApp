package com.preston.data.repo.greendao;


import android.os.Parcel;

import org.greenrobot.greendao.annotation.Entity;
import org.greenrobot.greendao.annotation.Generated;
import org.greenrobot.greendao.annotation.Id;
import org.greenrobot.greendao.annotation.Index;
import org.greenrobot.greendao.annotation.NotNull;
import org.greenrobot.greendao.annotation.Unique;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS
// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END

/**
 * Entity mapped to table "STOCK".
 */
@Entity
public class Stock implements android.os.Parcelable {

    @Id
    @NotNull
    @Unique
    @Index
    private String ticker;
    private Long dailyVolume;
    private Double change;
    private Double daysLow;
    private Double daysHigh;
    private Double yearsLow;
    private Double yearsHigh;
    private String marketCapitalization;
    private Double lastTradePrice;
    private String daysRange;
    private String name;
    private Long volume;
    private String stockExchange;
    private Double PricePurchased;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    @Generated
    public Stock() {
    }

    public Stock(String ticker) {
        this.ticker = ticker;
    }

    @Generated
    public Stock(String ticker, Long dailyVolume, Double change, Double daysLow, Double daysHigh, Double yearsLow, Double yearsHigh, String marketCapitalization, Double lastTradePrice, String daysRange, String name, Long volume, String stockExchange, Double PricePurchased) {
        this.ticker = ticker;
        this.dailyVolume = dailyVolume;
        this.change = change;
        this.daysLow = daysLow;
        this.daysHigh = daysHigh;
        this.yearsLow = yearsLow;
        this.yearsHigh = yearsHigh;
        this.marketCapitalization = marketCapitalization;
        this.lastTradePrice = lastTradePrice;
        this.daysRange = daysRange;
        this.name = name;
        this.volume = volume;
        this.stockExchange = stockExchange;
        this.PricePurchased = PricePurchased;
    }

    @NotNull
    public String getTicker() {
        return ticker;
    }

    /**
     * Not-null value; ensure this value is available before it is saved to the database.
     */
    public void setTicker(@NotNull String ticker) {
        this.ticker = ticker;
    }

    public Long getDailyVolume() {
        return dailyVolume;
    }

    public void setDailyVolume(Long dailyVolume) {
        this.dailyVolume = dailyVolume;
    }

    public Double getChange() {
        return change;
    }

    public void setChange(Double change) {
        this.change = change;
    }

    public Double getDaysLow() {
        return daysLow;
    }

    public void setDaysLow(Double daysLow) {
        this.daysLow = daysLow;
    }

    public Double getDaysHigh() {
        return daysHigh;
    }

    public void setDaysHigh(Double daysHigh) {
        this.daysHigh = daysHigh;
    }

    public Double getYearsLow() {
        return yearsLow;
    }

    public void setYearsLow(Double yearsLow) {
        this.yearsLow = yearsLow;
    }

    public Double getYearsHigh() {
        return yearsHigh;
    }

    public void setYearsHigh(Double yearsHigh) {
        this.yearsHigh = yearsHigh;
    }

    public String getMarketCapitalization() {
        return marketCapitalization;
    }

    public void setMarketCapitalization(String marketCapitalization) {
        this.marketCapitalization = marketCapitalization;
    }

    public Double getLastTradePrice() {
        return lastTradePrice;
    }

    public void setLastTradePrice(Double lastTradePrice) {
        this.lastTradePrice = lastTradePrice;
    }

    public String getDaysRange() {
        return daysRange;
    }

    public void setDaysRange(String daysRange) {
        this.daysRange = daysRange;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Long getVolume() {
        return volume;
    }

    public void setVolume(Long volume) {
        this.volume = volume;
    }

    public String getStockExchange() {
        return stockExchange;
    }

    public void setStockExchange(String stockExchange) {
        this.stockExchange = stockExchange;
    }

    public Double getPricePurchased() {
        return PricePurchased;
    }

    public void setPricePurchased(Double PricePurchased) {
        this.PricePurchased = PricePurchased;
    }

    // KEEP METHODS - put your custom methods here

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeString(this.ticker);
        dest.writeValue(this.dailyVolume);
        dest.writeValue(this.change);
        dest.writeValue(this.daysLow);
        dest.writeValue(this.daysHigh);
        dest.writeValue(this.yearsLow);
        dest.writeValue(this.yearsHigh);
        dest.writeString(this.marketCapitalization);
        dest.writeValue(this.lastTradePrice);
        dest.writeString(this.daysRange);
        dest.writeString(this.name);
        dest.writeValue(this.volume);
        dest.writeString(this.stockExchange);
        dest.writeValue(this.PricePurchased);
    }

    protected Stock(Parcel in) {
        this.ticker = in.readString();
        this.dailyVolume = (Long) in.readValue(Long.class.getClassLoader());
        this.change = (Double) in.readValue(Double.class.getClassLoader());
        this.daysLow = (Double) in.readValue(Double.class.getClassLoader());
        this.daysHigh = (Double) in.readValue(Double.class.getClassLoader());
        this.yearsLow = (Double) in.readValue(Double.class.getClassLoader());
        this.yearsHigh = (Double) in.readValue(Double.class.getClassLoader());
        this.marketCapitalization = in.readString();
        this.lastTradePrice = (Double) in.readValue(Double.class.getClassLoader());
        this.daysRange = in.readString();
        this.name = in.readString();
        this.volume = (Long) in.readValue(Long.class.getClassLoader());
        this.stockExchange = in.readString();
        this.PricePurchased = (Double) in.readValue(Double.class.getClassLoader());
    }

    public static final Creator<Stock> CREATOR = new Creator<Stock>() {
        @Override
        public Stock createFromParcel(Parcel source) {
            return new Stock(source);
        }

        @Override
        public Stock[] newArray(int size) {
            return new Stock[size];
        }
    };

    // KEEP METHODS END

}
